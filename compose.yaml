# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  mysql:
    image: mysql:latest
    environment:
      MYSQL_DATABASE: classweb
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/root-password
    volumes:
      - db_data:/data/db
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "mysql", "-p=$${cat $$MYSQL_ROOT_PASSWORD_FILE}"]
      interval: 4s
      timeout: 5s
      retries: 5
 
    secrets:
      - root-password
  web:
    depends_on:
      mysql:
        condition: service_healthy
    build: 
      context: .
    environment:
      DB_USER: root
      DB_HOST: mysql
      DB_NAME: classweb
      DB_ROOT_PASSWORD_FILE: /run/secrets/root-password
    ports:
      - 3000:3000
    secrets:
      - root-password
volumes:
  db_data:

secrets:
  root-password: 
    file: secrets/root-password.txt
